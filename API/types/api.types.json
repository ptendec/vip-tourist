{
	"openapi": "3.0.0",
	"info": {
		"version": "1.0.0",
		"title": "DOCUMENTATION",
		"description": "",
		"termsOfService": "YOUR_TERMS_OF_SERVICE_URL",
		"contact": {
			"name": "TEAM",
			"email": "contact-email@something.io",
			"url": "mywebsite.io"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "https://www.apache.org/licenses/LICENSE-2.0.html"
		},
		"x-generation-date": "01/05/2023 2:34:10 PM"
	},
	"x-strapi-config": {
		"path": "/documentation",
		"showGeneratedFiles": true,
		"generateDefaultResponse": true
	},
	"servers": [
		{
			"url": "http://37.140.241.144:1337",
			"description": "Development server"
		},
		{ "url": "YOUR_STAGING_SERVER", "description": "Staging server" },
		{ "url": "YOUR_PRODUCTION_SERVER", "description": "Production server" }
	],
	"externalDocs": {
		"description": "Find out more",
		"url": "https://strapi.io/documentation/developer-docs/latest/getting-started/introduction.html"
	},
	"security": [{ "bearerAuth": [] }],
	"paths": {
		"/cities": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/City" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["City"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/City" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["City"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewCity" }
						}
					}
				}
			}
		},
		"/cities/count": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "count": { "type": "integer" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["City"],
				"parameters": []
			}
		},
		"/cities/{id}": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/City" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["City"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/City" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["City"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewCity" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a record",
				"responses": {
					"200": {
						"description": "deletes a single record based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["City"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/countries": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Country" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Country"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Country" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Country"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewCountry" }
						}
					}
				}
			}
		},
		"/countries/count": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "count": { "type": "integer" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Country"],
				"parameters": []
			}
		},
		"/countries/{id}": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Country" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Country"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Country" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Country"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewCountry" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a record",
				"responses": {
					"200": {
						"description": "deletes a single record based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Country"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/orders": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Order" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Order"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Order" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Order"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewOrder" }
						}
					}
				}
			}
		},
		"/orders/count": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "count": { "type": "integer" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Order"],
				"parameters": []
			}
		},
		"/orders/{id}": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Order" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Order"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Order" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Order"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewOrder" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a record",
				"responses": {
					"200": {
						"description": "deletes a single record based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Order"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/payment-cards": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment-card"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment-card"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewPayment-card" }
						}
					}
				}
			}
		},
		"/payment-cards/count": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment-card"],
				"parameters": []
			}
		},
		"/payment-cards/{id}": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment-card"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment-card"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewPayment-card" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a record",
				"responses": {
					"200": {
						"description": "deletes a single record based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment-card"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/payments": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Payment" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Payment" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewPayment" }
						}
					}
				}
			}
		},
		"/payments/count": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "count": { "type": "integer" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment"],
				"parameters": []
			}
		},
		"/payments/{id}": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Payment" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Payment" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewPayment" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a record",
				"responses": {
					"200": {
						"description": "deletes a single record based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Payment"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/privacy-policy": {
			"get": {
				"deprecated": false,
				"description": "Find all the privacy-policy's records",
				"responses": {
					"200": {
						"description": "Retrieve privacy-policy document(s)",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Privacy-policy"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a single privacy-policy record",
				"responses": {
					"200": {
						"description": "Retrieve privacy-policy document(s)",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Privacy-policy"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewPrivacy-policy" }
						}
					}
				},
				"parameters": []
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a single privacy-policy record",
				"responses": {
					"200": {
						"description": "deletes a single privacy-policy based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Privacy-policy"],
				"parameters": []
			}
		},
		"/profiles": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Profile" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Profile"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Profile" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Profile"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewProfile" }
						}
					}
				}
			}
		},
		"/profiles/count": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "count": { "type": "integer" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Profile"],
				"parameters": []
			}
		},
		"/profiles/{uid}": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Profile" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Profile"],
				"parameters": [
					{
						"name": "uid",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/profiles/{id}": {
			"put": {
				"deprecated": false,
				"description": "Update a record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Profile" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Profile"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewProfile" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a record",
				"responses": {
					"200": {
						"description": "deletes a single record based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Profile"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/remarks": {
			"get": {
				"deprecated": false,
				"description": "Find all the remarks's records",
				"responses": {
					"200": {
						"description": "Retrieve remarks document(s)",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Remarks" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Remarks"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new remarks record",
				"responses": {
					"200": {
						"description": "Retrieve remarks document(s)",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Remarks" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Remarks"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewRemarks" }
						}
					}
				}
			}
		},
		"/remarks/count": {
			"get": {
				"deprecated": false,
				"description": "Retrieve the number of remarks documents",
				"responses": {
					"200": {
						"description": "Retrieve remarks document(s)",
						"content": {
							"application/json": {
								"schema": { "properties": { "count": { "type": "integer" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Remarks"],
				"parameters": []
			}
		},
		"/remarks/{id}": {
			"get": {
				"deprecated": false,
				"description": "Find one remarks record",
				"responses": {
					"200": {
						"description": "Retrieve remarks document(s)",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Remarks" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Remarks"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a single remarks record",
				"responses": {
					"200": {
						"description": "Retrieve remarks document(s)",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Remarks" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Remarks"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewRemarks" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a single remarks record",
				"responses": {
					"200": {
						"description": "deletes a single remarks based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Remarks"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/reviews": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Review" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Review"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Review" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Review"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewReview" }
						}
					}
				}
			}
		},
		"/reviews/count": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "count": { "type": "integer" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Review"],
				"parameters": []
			}
		},
		"/reviews/{id}": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Review" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Review"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Review" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Review"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewReview" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a record",
				"responses": {
					"200": {
						"description": "deletes a single record based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Review"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/settings": {
			"get": {
				"deprecated": false,
				"description": "Find all the settings's records",
				"responses": {
					"200": {
						"description": "Retrieve settings document(s)",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Settings" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Settings"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a single settings record",
				"responses": {
					"200": {
						"description": "Retrieve settings document(s)",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Settings" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Settings"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewSettings" }
						}
					}
				},
				"parameters": []
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a single settings record",
				"responses": {
					"200": {
						"description": "deletes a single settings based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Settings"],
				"parameters": []
			}
		},
		"/tours": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Tour" }
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Tour"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Tour" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Tour"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewTour" }
						}
					}
				}
			}
		},
		"/tours/count": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "count": { "type": "integer" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Tour"],
				"parameters": []
			}
		},
		"/tours/{id}": {
			"get": {
				"deprecated": false,
				"description": "",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Tour" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Tour"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a record",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Tour" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Tour"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewTour" }
						}
					}
				},
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a record",
				"responses": {
					"200": {
						"description": "deletes a single record based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Tour"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/user-agreement": {
			"get": {
				"deprecated": false,
				"description": "Find all the user-agreement's records",
				"responses": {
					"200": {
						"description": "Retrieve user-agreement document(s)",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["User-agreement"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update a single user-agreement record",
				"responses": {
					"200": {
						"description": "Retrieve user-agreement document(s)",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["User-agreement"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewUser-agreement" }
						}
					}
				},
				"parameters": []
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a single user-agreement record",
				"responses": {
					"200": {
						"description": "deletes a single user-agreement based on the ID supplied",
						"content": {
							"application/json": {
								"schema": { "type": "integer", "format": "int64" }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["User-agreement"],
				"parameters": []
			}
		},
		"/email/": {
			"post": {
				"deprecated": false,
				"description": "Send an email",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Email - Email"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "properties": { "foo": { "type": "string" } } }
						}
					}
				}
			}
		},
		"/email/test": {
			"post": {
				"deprecated": false,
				"description": "Send an test email",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Email - Email"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "properties": { "foo": { "type": "string" } } }
						}
					}
				}
			}
		},
		"/email/settings": {
			"get": {
				"deprecated": false,
				"description": "Get the email settings",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Email - Email"],
				"parameters": []
			}
		},
		"/upload/": {
			"post": {
				"deprecated": false,
				"description": "Upload a file",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Upload - File"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "properties": { "foo": { "type": "string" } } }
						}
					}
				}
			}
		},
		"/upload/files/count": {
			"get": {
				"deprecated": false,
				"description": "Retrieve the total number of uploaded files",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Upload - File"],
				"parameters": []
			}
		},
		"/upload/files": {
			"get": {
				"deprecated": false,
				"description": "Retrieve all file documents",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Upload - File"],
				"parameters": []
			}
		},
		"/upload/files/{id}": {
			"get": {
				"deprecated": false,
				"description": "Retrieve a single file depending on its id",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Upload - File"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"delete": {
				"deprecated": false,
				"description": "Delete an uploaded file",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Upload - File"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/upload/search/{id}": {
			"get": {
				"deprecated": false,
				"description": "Search for an uploaded file",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["Upload - File"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/users-permissions/roles/{id}": {
			"get": {
				"deprecated": false,
				"description": "Retrieve a role depending on its id",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersPermissionsRole"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - Role"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/users-permissions/roles": {
			"get": {
				"deprecated": false,
				"description": "Retrieve all role documents",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UsersPermissionsRole"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - Role"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			},
			"post": {
				"deprecated": false,
				"description": "Create a new role",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersPermissionsRole"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - Role"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewUsersPermissionsRole"
							}
						}
					}
				}
			}
		},
		"/users-permissions/roles/{role}": {
			"put": {
				"deprecated": false,
				"description": "Update a role",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersPermissionsRole"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - Role"],
				"parameters": [
					{
						"name": "role",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewUsersPermissionsRole"
							}
						}
					}
				}
			},
			"delete": {
				"deprecated": false,
				"description": "Delete a role",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - Role"],
				"parameters": [
					{
						"name": "role",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/users-permissions/search/{id}": {
			"get": {
				"deprecated": false,
				"description": "Search for users",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UsersPermissionsUser"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					},
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			}
		},
		"/connect/*": {
			"get": {
				"deprecated": false,
				"description": "Connect a provider",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": []
			}
		},
		"/auth/local": {
			"post": {
				"deprecated": false,
				"description": "Login a user using the identifiers email and password",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "properties": { "foo": { "type": "string" } } }
						}
					}
				}
			}
		},
		"/auth/local/register": {
			"post": {
				"deprecated": false,
				"description": "Register a new user with the default role",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersPermissionsUser"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewUsersPermissionsUser"
							}
						}
					}
				}
			}
		},
		"/auth/{provider}/callback": {
			"get": {
				"deprecated": false,
				"description": "Successfull redirection after approving a provider",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": [
					{
						"name": "provider",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		},
		"/auth/forgot-password": {
			"post": {
				"deprecated": false,
				"description": "Send the reset password email link",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "properties": { "foo": { "type": "string" } } }
						}
					}
				}
			}
		},
		"/auth/reset-password": {
			"post": {
				"deprecated": false,
				"description": "Reset user password with a code (resetToken)",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "properties": { "foo": { "type": "string" } } }
						}
					}
				}
			}
		},
		"/auth/email-confirmation": {
			"get": {
				"deprecated": false,
				"description": "Validate a user account",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": []
			}
		},
		"/auth/send-email-confirmation": {
			"post": {
				"deprecated": false,
				"description": "Send a confirmation email to user",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": { "properties": { "foo": { "type": "string" } } }
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"deprecated": false,
				"description": "Retrieve all user documents",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UsersPermissionsUser"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": [
					{
						"name": "_limit",
						"in": "query",
						"required": false,
						"description": "Maximum number of results possible",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "_sort",
						"in": "query",
						"required": false,
						"description": "Sort according to a specific field.",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_start",
						"in": "query",
						"required": false,
						"description": "Skip a specific number of entries (especially useful for pagination)",
						"schema": { "type": "integer" },
						"deprecated": false
					},
					{
						"name": "=",
						"in": "query",
						"required": false,
						"description": "Get entries that matches exactly your input",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_ne",
						"in": "query",
						"required": false,
						"description": "Get records that are not equals to something",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lt",
						"in": "query",
						"required": false,
						"description": "Get record that are lower than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_lte",
						"in": "query",
						"required": false,
						"description": "Get records that are lower than or equal to a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gt",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_gte",
						"in": "query",
						"required": false,
						"description": "Get records that are greater than  or equal a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_contains",
						"in": "query",
						"required": false,
						"description": "Get records that contains a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_containss",
						"in": "query",
						"required": false,
						"description": "Get records that contains (case sensitive) a value",
						"schema": { "type": "string" },
						"deprecated": false
					},
					{
						"name": "_in",
						"in": "query",
						"required": false,
						"description": "Get records that matches any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					},
					{
						"name": "_nin",
						"in": "query",
						"required": false,
						"description": "Get records that doesn't match any value in the array of values",
						"schema": { "type": "array", "items": { "type": "string" } },
						"deprecated": false
					}
				]
			}
		},
		"/users/me": {
			"get": {
				"deprecated": false,
				"description": "Retrieve the logged in user information",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersPermissionsUser"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": []
			}
		},
		"/users/{id}": {
			"get": {
				"deprecated": false,
				"description": "Retrieve a single user depending on his id",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersPermissionsUser"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			},
			"put": {
				"deprecated": false,
				"description": "Update an existing user",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersPermissionsUser"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"requestBody": {
					"description": "",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewUsersPermissionsUser"
							}
						}
					}
				}
			},
			"delete": {
				"deprecated": false,
				"description": "Delete an existing user",
				"responses": {
					"200": {
						"description": "response",
						"content": {
							"application/json": {
								"schema": { "properties": { "foo": { "type": "string" } } }
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					},
					"default": {
						"description": "unexpected error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Error" }
							}
						}
					}
				},
				"summary": "",
				"tags": ["UsersPermissions - User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"deprecated": false,
						"required": true,
						"schema": { "type": "string" }
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"City": {
				"required": ["id", "name", "image"],
				"properties": {
					"id": { "type": "string" },
					"name": { "type": "string" },
					"image": {
						"required": [
							"id",
							"name",
							"hash",
							"mime",
							"size",
							"url",
							"provider"
						],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"alternativeText": { "type": "string" },
							"caption": { "type": "string" },
							"width": { "type": "integer" },
							"height": { "type": "integer" },
							"formats": { "type": "object" },
							"hash": { "type": "string" },
							"ext": { "type": "string" },
							"mime": { "type": "string" },
							"size": { "type": "number" },
							"url": { "type": "string" },
							"previewUrl": { "type": "string" },
							"provider": { "type": "string" },
							"provider_metadata": { "type": "object" },
							"related": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"order": { "type": "integer" },
					"country": {
						"required": ["id", "name"],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"flag": { "type": "string" },
							"code": { "type": "string" },
							"cities": { "type": "array", "items": { "type": "string" } },
							"vid": { "type": "string" },
							"next": { "type": "boolean" },
							"createdLanguage": { "type": "string" },
							"localizations": {
								"type": "array",
								"items": { "type": "string" }
							},
							"locale": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"tours": {
						"type": "array",
						"items": {
							"required": ["id", "name"],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"image": { "type": "array", "items": { "type": "string" } },
								"rating": { "type": "number" },
								"order": { "type": "integer" },
								"top": { "type": "boolean" },
								"guide": { "type": "boolean" },
								"private": { "type": "boolean" },
								"one_day_trip": { "type": "boolean" },
								"nature": { "type": "boolean" },
								"ticket_must_have": { "type": "boolean" },
								"on_water": { "type": "boolean" },
								"package_tour": { "type": "boolean" },
								"small_group": { "type": "boolean" },
								"invalid_friendly": { "type": "boolean" },
								"history": { "type": "boolean" },
								"world_war": { "type": "boolean" },
								"open_air": { "type": "boolean" },
								"street_art": { "type": "boolean" },
								"adrenaline": { "type": "boolean" },
								"architecture": { "type": "boolean" },
								"food": { "type": "boolean" },
								"music": { "type": "boolean" },
								"for_couples_activities": { "type": "boolean" },
								"for_kids_activities": { "type": "boolean" },
								"museum": { "type": "boolean" },
								"memorial": { "type": "boolean" },
								"park": { "type": "boolean" },
								"gallery": { "type": "boolean" },
								"square": { "type": "boolean" },
								"theater": { "type": "boolean" },
								"castle": { "type": "boolean" },
								"towers": { "type": "boolean" },
								"airports": { "type": "boolean" },
								"bicycle": { "type": "boolean" },
								"minivan": { "type": "boolean" },
								"public_transport": { "type": "boolean" },
								"limousine": { "type": "boolean" },
								"bicycle_taxi": { "type": "boolean" },
								"car": { "type": "boolean" },
								"cruise": { "type": "boolean" },
								"city": { "type": "string" },
								"vid": { "type": "string" },
								"reviews_count": { "type": "integer" },
								"price": { "type": "number" },
								"reviews": { "type": "array", "items": { "type": "string" } },
								"country": { "type": "string" },
								"image_urls": { "type": "string" },
								"approved": { "type": "boolean" },
								"translationApproved": { "type": "boolean" },
								"createdLanguage": { "type": "string" },
								"next": { "type": "boolean" },
								"description": { "type": "string" },
								"location_point": { "type": "string" },
								"orders": { "type": "array", "items": { "type": "string" } },
								"requetedCity": { "type": "string" },
								"profile": { "type": "string" },
								"duration": { "type": "string" },
								"languages": { "type": "string" },
								"adult_price": { "type": "number" },
								"child_price": { "type": "number" },
								"prerequisites": { "type": "string" },
								"prohibitions": { "type": "string" },
								"included": { "type": "string" },
								"not_included": { "type": "string" },
								"date": { "type": "string" },
								"note": { "type": "string" },
								"alwaysAvailable": { "type": "boolean" },
								"remark": { "type": "string" },
								"withTransfer": { "type": "boolean" },
								"hunting": { "type": "boolean" },
								"adventure": { "type": "boolean" },
								"fishing": { "type": "boolean" },
								"night": { "type": "boolean" },
								"game": { "type": "boolean" },
								"onlyTransfer": { "type": "boolean" },
								"fewDaysTrip": { "type": "boolean" },
								"placesCount": { "type": "integer" },
								"mainPhotoUrl": { "type": "string" },
								"transferPrice": { "type": "number" },
								"transferPhotoUrl": { "type": "string" },
								"active": { "type": "boolean" },
								"startTime": { "type": "string" },
								"weekDays": { "type": "string" },
								"freeTicketNotice": { "type": "string" },
								"localizations": {
									"type": "array",
									"items": { "type": "string" }
								},
								"locale": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"vid": { "type": "string" },
					"next": { "type": "boolean", "default": false },
					"createdLanguage": { "type": "string", "default": "ru-RU" },
					"active": { "type": "boolean", "default": true },
					"popular": { "type": "boolean", "default": false },
					"notCity": { "type": "boolean", "default": false },
					"localizations": {
						"type": "array",
						"items": {
							"required": ["id", "name", "image"],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"image": { "type": "string" },
								"order": { "type": "integer" },
								"country": { "type": "string" },
								"tours": { "type": "array", "items": { "type": "string" } },
								"vid": { "type": "string" },
								"next": { "type": "boolean" },
								"createdLanguage": { "type": "string" },
								"active": { "type": "boolean" },
								"popular": { "type": "boolean" },
								"notCity": { "type": "boolean" },
								"localizations": {
									"type": "array",
									"items": { "type": "string" }
								},
								"locale": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"locale": { "type": "string" }
				}
			},
			"NewCity": {
				"required": ["name"],
				"properties": {
					"name": { "type": "string" },
					"order": { "type": "integer" },
					"country": { "type": "string" },
					"tours": { "type": "array", "items": { "type": "string" } },
					"vid": { "type": "string" },
					"next": { "type": "boolean", "default": false },
					"createdLanguage": { "type": "string", "default": "ru-RU" },
					"active": { "type": "boolean", "default": true },
					"popular": { "type": "boolean", "default": false },
					"notCity": { "type": "boolean", "default": false },
					"localizations": { "type": "array", "items": { "type": "string" } },
					"locale": { "type": "string" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Country": {
				"required": ["id", "name"],
				"properties": {
					"id": { "type": "string" },
					"name": { "type": "string" },
					"flag": {
						"required": [
							"id",
							"name",
							"hash",
							"mime",
							"size",
							"url",
							"provider"
						],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"alternativeText": { "type": "string" },
							"caption": { "type": "string" },
							"width": { "type": "integer" },
							"height": { "type": "integer" },
							"formats": { "type": "object" },
							"hash": { "type": "string" },
							"ext": { "type": "string" },
							"mime": { "type": "string" },
							"size": { "type": "number" },
							"url": { "type": "string" },
							"previewUrl": { "type": "string" },
							"provider": { "type": "string" },
							"provider_metadata": { "type": "object" },
							"related": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"code": { "type": "string", "default": "+", "maxLength": 10 },
					"cities": {
						"type": "array",
						"items": {
							"required": ["id", "name", "image"],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"image": { "type": "string" },
								"order": { "type": "integer" },
								"country": { "type": "string" },
								"tours": { "type": "array", "items": { "type": "string" } },
								"vid": { "type": "string" },
								"next": { "type": "boolean" },
								"createdLanguage": { "type": "string" },
								"active": { "type": "boolean" },
								"popular": { "type": "boolean" },
								"notCity": { "type": "boolean" },
								"localizations": {
									"type": "array",
									"items": { "type": "string" }
								},
								"locale": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"vid": { "type": "string" },
					"createdLanguage": { "type": "string", "default": "ru-RU" },
					"localizations": {
						"type": "array",
						"items": {
							"required": ["id", "name"],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"flag": { "type": "string" },
								"code": { "type": "string" },
								"cities": { "type": "array", "items": { "type": "string" } },
								"vid": { "type": "string" },
								"next": { "type": "boolean" },
								"createdLanguage": { "type": "string" },
								"localizations": {
									"type": "array",
									"items": { "type": "string" }
								},
								"locale": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"locale": { "type": "string" }
				}
			},
			"NewCountry": {
				"required": ["name"],
				"properties": {
					"name": { "type": "string" },
					"code": { "type": "string", "default": "+", "maxLength": 10 },
					"cities": { "type": "array", "items": { "type": "string" } },
					"vid": { "type": "string" },
					"next": { "type": "boolean", "default": false },
					"createdLanguage": { "type": "string", "default": "ru-RU" },
					"localizations": { "type": "array", "items": { "type": "string" } },
					"locale": { "type": "string" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Order": {
				"required": ["id"],
				"properties": {
					"id": { "type": "string" },
					"price": { "type": "number" },
					"date": { "type": "string", "format": "date-time" },
					"seller_confirmed": { "type": "boolean", "default": false },
					"activated": { "type": "boolean", "default": false },
					"commission": { "type": "number" },
					"qrcode_url": { "type": "string" },
					"profile": {
						"required": ["id"],
						"properties": {
							"id": { "type": "string" },
							"email": { "type": "string" },
							"name": { "type": "string" },
							"photo": { "type": "string" },
							"phone_number": { "type": "string" },
							"is_tourist": { "type": "boolean" },
							"is_verified": { "type": "boolean" },
							"get_promo": { "type": "boolean" },
							"documents": { "type": "array", "items": { "type": "string" } },
							"photo_url": { "type": "string" },
							"documents_urls": { "type": "object" },
							"uid": { "type": "uid" },
							"reviews_count": { "type": "integer" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"orders": { "type": "array", "items": { "type": "string" } },
							"fcm_token": { "type": "string" },
							"locale": { "type": "string" },
							"balance": { "type": "number" },
							"soldOrders": { "type": "array", "items": { "type": "string" } },
							"payments": { "type": "array", "items": { "type": "string" } },
							"payment_cards": {
								"type": "array",
								"items": { "type": "string" }
							},
							"pushSub": { "type": "boolean" },
							"tours": { "type": "array", "items": { "type": "string" } },
							"socialLink": { "type": "string" },
							"hasWhatsapp": { "type": "boolean" },
							"hasViber": { "type": "boolean" },
							"hasTelegram": { "type": "boolean" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"is_shild": { "type": "boolean", "default": false },
					"canceled": { "type": "boolean", "default": false },
					"tour": {
						"required": ["id", "name"],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"image": { "type": "array", "items": { "type": "string" } },
							"rating": { "type": "number" },
							"order": { "type": "integer" },
							"top": { "type": "boolean" },
							"guide": { "type": "boolean" },
							"private": { "type": "boolean" },
							"one_day_trip": { "type": "boolean" },
							"nature": { "type": "boolean" },
							"ticket_must_have": { "type": "boolean" },
							"on_water": { "type": "boolean" },
							"package_tour": { "type": "boolean" },
							"small_group": { "type": "boolean" },
							"invalid_friendly": { "type": "boolean" },
							"history": { "type": "boolean" },
							"world_war": { "type": "boolean" },
							"open_air": { "type": "boolean" },
							"street_art": { "type": "boolean" },
							"adrenaline": { "type": "boolean" },
							"architecture": { "type": "boolean" },
							"food": { "type": "boolean" },
							"music": { "type": "boolean" },
							"for_couples_activities": { "type": "boolean" },
							"for_kids_activities": { "type": "boolean" },
							"museum": { "type": "boolean" },
							"memorial": { "type": "boolean" },
							"park": { "type": "boolean" },
							"gallery": { "type": "boolean" },
							"square": { "type": "boolean" },
							"theater": { "type": "boolean" },
							"castle": { "type": "boolean" },
							"towers": { "type": "boolean" },
							"airports": { "type": "boolean" },
							"bicycle": { "type": "boolean" },
							"minivan": { "type": "boolean" },
							"public_transport": { "type": "boolean" },
							"limousine": { "type": "boolean" },
							"bicycle_taxi": { "type": "boolean" },
							"car": { "type": "boolean" },
							"cruise": { "type": "boolean" },
							"city": { "type": "string" },
							"vid": { "type": "string" },
							"reviews_count": { "type": "integer" },
							"price": { "type": "number" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"country": { "type": "string" },
							"image_urls": { "type": "string" },
							"approved": { "type": "boolean" },
							"translationApproved": { "type": "boolean" },
							"createdLanguage": { "type": "string" },
							"next": { "type": "boolean" },
							"description": { "type": "string" },
							"location_point": { "type": "string" },
							"orders": { "type": "array", "items": { "type": "string" } },
							"requetedCity": { "type": "string" },
							"profile": { "type": "string" },
							"duration": { "type": "string" },
							"languages": { "type": "string" },
							"adult_price": { "type": "number" },
							"child_price": { "type": "number" },
							"prerequisites": { "type": "string" },
							"prohibitions": { "type": "string" },
							"included": { "type": "string" },
							"not_included": { "type": "string" },
							"date": { "type": "string" },
							"note": { "type": "string" },
							"alwaysAvailable": { "type": "boolean" },
							"remark": { "type": "string" },
							"withTransfer": { "type": "boolean" },
							"hunting": { "type": "boolean" },
							"adventure": { "type": "boolean" },
							"fishing": { "type": "boolean" },
							"night": { "type": "boolean" },
							"game": { "type": "boolean" },
							"onlyTransfer": { "type": "boolean" },
							"fewDaysTrip": { "type": "boolean" },
							"placesCount": { "type": "integer" },
							"mainPhotoUrl": { "type": "string" },
							"transferPrice": { "type": "number" },
							"transferPhotoUrl": { "type": "string" },
							"active": { "type": "boolean" },
							"startTime": { "type": "string" },
							"weekDays": { "type": "string" },
							"freeTicketNotice": { "type": "string" },
							"localizations": {
								"type": "array",
								"items": { "type": "string" }
							},
							"locale": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"seller": {
						"required": ["id"],
						"properties": {
							"id": { "type": "string" },
							"email": { "type": "string" },
							"name": { "type": "string" },
							"photo": { "type": "string" },
							"phone_number": { "type": "string" },
							"is_tourist": { "type": "boolean" },
							"is_verified": { "type": "boolean" },
							"get_promo": { "type": "boolean" },
							"documents": { "type": "array", "items": { "type": "string" } },
							"photo_url": { "type": "string" },
							"documents_urls": { "type": "object" },
							"uid": { "type": "uid" },
							"reviews_count": { "type": "integer" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"orders": { "type": "array", "items": { "type": "string" } },
							"fcm_token": { "type": "string" },
							"locale": { "type": "string" },
							"balance": { "type": "number" },
							"soldOrders": { "type": "array", "items": { "type": "string" } },
							"payments": { "type": "array", "items": { "type": "string" } },
							"payment_cards": {
								"type": "array",
								"items": { "type": "string" }
							},
							"pushSub": { "type": "boolean" },
							"tours": { "type": "array", "items": { "type": "string" } },
							"socialLink": { "type": "string" },
							"hasWhatsapp": { "type": "boolean" },
							"hasViber": { "type": "boolean" },
							"hasTelegram": { "type": "boolean" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"tour_name": { "type": "string" },
					"yoo_payment": { "type": "string" },
					"yoo_deal": { "type": "string" }
				}
			},
			"NewOrder": {
				"properties": {
					"price": { "type": "number" },
					"date": { "type": "string", "format": "date-time" },
					"seller_confirmed": { "type": "boolean", "default": false },
					"activated": { "type": "boolean", "default": false },
					"commission": { "type": "number" },
					"qrcode_url": { "type": "string" },
					"profile": { "type": "string" },
					"is_shild": { "type": "boolean", "default": false },
					"canceled": { "type": "boolean", "default": false },
					"tour": { "type": "string" },
					"seller": { "type": "string" },
					"tour_name": { "type": "string" },
					"yoo_payment": { "type": "string" },
					"yoo_deal": { "type": "string" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Payment-card": {
				"required": ["id"],
				"properties": {
					"id": { "type": "string" },
					"number": { "type": "string" },
					"name": { "type": "string" },
					"iban": { "type": "string" },
					"profile": {
						"required": ["id"],
						"properties": {
							"id": { "type": "string" },
							"email": { "type": "string" },
							"name": { "type": "string" },
							"photo": { "type": "string" },
							"phone_number": { "type": "string" },
							"is_tourist": { "type": "boolean" },
							"is_verified": { "type": "boolean" },
							"get_promo": { "type": "boolean" },
							"documents": { "type": "array", "items": { "type": "string" } },
							"photo_url": { "type": "string" },
							"documents_urls": { "type": "object" },
							"uid": { "type": "uid" },
							"reviews_count": { "type": "integer" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"orders": { "type": "array", "items": { "type": "string" } },
							"fcm_token": { "type": "string" },
							"locale": { "type": "string" },
							"balance": { "type": "number" },
							"soldOrders": { "type": "array", "items": { "type": "string" } },
							"payments": { "type": "array", "items": { "type": "string" } },
							"payment_cards": {
								"type": "array",
								"items": { "type": "string" }
							},
							"pushSub": { "type": "boolean" },
							"tours": { "type": "array", "items": { "type": "string" } },
							"socialLink": { "type": "string" },
							"hasWhatsapp": { "type": "boolean" },
							"hasViber": { "type": "boolean" },
							"hasTelegram": { "type": "boolean" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"payments": {
						"type": "array",
						"items": {
							"required": ["id"],
							"properties": {
								"id": { "type": "string" },
								"sum": { "type": "number" },
								"completed": { "type": "boolean" },
								"canceled": { "type": "boolean" },
								"profile": { "type": "string" },
								"payment_card": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					}
				}
			},
			"NewPayment-card": {
				"properties": {
					"number": { "type": "string" },
					"name": { "type": "string" },
					"iban": { "type": "string" },
					"profile": { "type": "string" },
					"payments": { "type": "array", "items": { "type": "string" } },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Payment": {
				"required": ["id"],
				"properties": {
					"id": { "type": "string" },
					"sum": { "type": "number" },
					"completed": { "type": "boolean", "default": false },
					"canceled": { "type": "boolean", "default": false },
					"profile": {
						"required": ["id"],
						"properties": {
							"id": { "type": "string" },
							"email": { "type": "string" },
							"name": { "type": "string" },
							"photo": { "type": "string" },
							"phone_number": { "type": "string" },
							"is_tourist": { "type": "boolean" },
							"is_verified": { "type": "boolean" },
							"get_promo": { "type": "boolean" },
							"documents": { "type": "array", "items": { "type": "string" } },
							"photo_url": { "type": "string" },
							"documents_urls": { "type": "object" },
							"uid": { "type": "uid" },
							"reviews_count": { "type": "integer" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"orders": { "type": "array", "items": { "type": "string" } },
							"fcm_token": { "type": "string" },
							"locale": { "type": "string" },
							"balance": { "type": "number" },
							"soldOrders": { "type": "array", "items": { "type": "string" } },
							"payments": { "type": "array", "items": { "type": "string" } },
							"payment_cards": {
								"type": "array",
								"items": { "type": "string" }
							},
							"pushSub": { "type": "boolean" },
							"tours": { "type": "array", "items": { "type": "string" } },
							"socialLink": { "type": "string" },
							"hasWhatsapp": { "type": "boolean" },
							"hasViber": { "type": "boolean" },
							"hasTelegram": { "type": "boolean" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"payment_card": {
						"required": ["id"],
						"properties": {
							"id": { "type": "string" },
							"number": { "type": "string" },
							"name": { "type": "string" },
							"iban": { "type": "string" },
							"profile": { "type": "string" },
							"payments": { "type": "array", "items": { "type": "string" } },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					}
				}
			},
			"NewPayment": {
				"properties": {
					"sum": { "type": "number" },
					"completed": { "type": "boolean", "default": false },
					"canceled": { "type": "boolean", "default": false },
					"profile": { "type": "string" },
					"payment_card": { "type": "string" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Privacy-policy": {
				"required": ["id"],
				"properties": {
					"id": { "type": "string" },
					"title": { "type": "string" },
					"text": { "type": "string" },
					"published_at": { "type": "string", "format": "date-time" }
				}
			},
			"NewPrivacy-policy": {
				"properties": {
					"title": { "type": "string" },
					"text": { "type": "string" },
					"published_at": { "type": "string", "format": "date-time" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Profile": {
				"required": ["id"],
				"properties": {
					"id": { "type": "string" },
					"email": { "type": "string" },
					"name": { "type": "string" },
					"photo": {
						"required": [
							"id",
							"name",
							"hash",
							"mime",
							"size",
							"url",
							"provider"
						],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"alternativeText": { "type": "string" },
							"caption": { "type": "string" },
							"width": { "type": "integer" },
							"height": { "type": "integer" },
							"formats": { "type": "object" },
							"hash": { "type": "string" },
							"ext": { "type": "string" },
							"mime": { "type": "string" },
							"size": { "type": "number" },
							"url": { "type": "string" },
							"previewUrl": { "type": "string" },
							"provider": { "type": "string" },
							"provider_metadata": { "type": "object" },
							"related": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"phone_number": { "type": "string" },
					"is_tourist": { "type": "boolean", "default": true },
					"is_verified": { "type": "boolean", "default": false },
					"get_promo": { "type": "boolean", "default": false },
					"documents": {
						"type": "array",
						"items": {
							"required": [
								"id",
								"name",
								"hash",
								"mime",
								"size",
								"url",
								"provider"
							],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"alternativeText": { "type": "string" },
								"caption": { "type": "string" },
								"width": { "type": "integer" },
								"height": { "type": "integer" },
								"formats": { "type": "object" },
								"hash": { "type": "string" },
								"ext": { "type": "string" },
								"mime": { "type": "string" },
								"size": { "type": "number" },
								"url": { "type": "string" },
								"previewUrl": { "type": "string" },
								"provider": { "type": "string" },
								"provider_metadata": { "type": "object" },
								"related": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"photo_url": { "type": "string" },
					"documents_urls": { "type": "object" },
					"uid": { "type": "uid" },
					"reviews_count": { "type": "integer" },
					"reviews": {
						"type": "array",
						"items": {
							"required": ["id"],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"photo_url": { "type": "string" },
								"text": { "type": "string" },
								"rating": { "type": "integer" },
								"tour": { "type": "string" },
								"profile": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"orders": {
						"type": "array",
						"items": {
							"required": ["id"],
							"properties": {
								"id": { "type": "string" },
								"price": { "type": "number" },
								"date": { "type": "string" },
								"seller_confirmed": { "type": "boolean" },
								"activated": { "type": "boolean" },
								"commission": { "type": "number" },
								"qrcode_url": { "type": "string" },
								"profile": { "type": "string" },
								"is_shild": { "type": "boolean" },
								"canceled": { "type": "boolean" },
								"tour": { "type": "string" },
								"seller": { "type": "string" },
								"tour_name": { "type": "string" },
								"yoo_payment": { "type": "string" },
								"yoo_deal": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"fcm_token": { "type": "string" },
					"locale": { "type": "string" },
					"balance": { "type": "number", "default": 0 },
					"soldOrders": {
						"type": "array",
						"items": {
							"required": ["id"],
							"properties": {
								"id": { "type": "string" },
								"price": { "type": "number" },
								"date": { "type": "string" },
								"seller_confirmed": { "type": "boolean" },
								"activated": { "type": "boolean" },
								"commission": { "type": "number" },
								"qrcode_url": { "type": "string" },
								"profile": { "type": "string" },
								"is_shild": { "type": "boolean" },
								"canceled": { "type": "boolean" },
								"tour": { "type": "string" },
								"seller": { "type": "string" },
								"tour_name": { "type": "string" },
								"yoo_payment": { "type": "string" },
								"yoo_deal": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"payments": {
						"type": "array",
						"items": {
							"required": ["id"],
							"properties": {
								"id": { "type": "string" },
								"sum": { "type": "number" },
								"completed": { "type": "boolean" },
								"canceled": { "type": "boolean" },
								"profile": { "type": "string" },
								"payment_card": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"payment_cards": {
						"type": "array",
						"items": {
							"required": ["id"],
							"properties": {
								"id": { "type": "string" },
								"number": { "type": "string" },
								"name": { "type": "string" },
								"iban": { "type": "string" },
								"profile": { "type": "string" },
								"payments": { "type": "array", "items": { "type": "string" } },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"pushSub": { "type": "boolean", "default": false },
					"tours": {
						"type": "array",
						"items": {
							"required": ["id", "name"],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"image": { "type": "array", "items": { "type": "string" } },
								"rating": { "type": "number" },
								"order": { "type": "integer" },
								"top": { "type": "boolean" },
								"guide": { "type": "boolean" },
								"private": { "type": "boolean" },
								"one_day_trip": { "type": "boolean" },
								"nature": { "type": "boolean" },
								"ticket_must_have": { "type": "boolean" },
								"on_water": { "type": "boolean" },
								"package_tour": { "type": "boolean" },
								"small_group": { "type": "boolean" },
								"invalid_friendly": { "type": "boolean" },
								"history": { "type": "boolean" },
								"world_war": { "type": "boolean" },
								"open_air": { "type": "boolean" },
								"street_art": { "type": "boolean" },
								"adrenaline": { "type": "boolean" },
								"architecture": { "type": "boolean" },
								"food": { "type": "boolean" },
								"music": { "type": "boolean" },
								"for_couples_activities": { "type": "boolean" },
								"for_kids_activities": { "type": "boolean" },
								"museum": { "type": "boolean" },
								"memorial": { "type": "boolean" },
								"park": { "type": "boolean" },
								"gallery": { "type": "boolean" },
								"square": { "type": "boolean" },
								"theater": { "type": "boolean" },
								"castle": { "type": "boolean" },
								"towers": { "type": "boolean" },
								"airports": { "type": "boolean" },
								"bicycle": { "type": "boolean" },
								"minivan": { "type": "boolean" },
								"public_transport": { "type": "boolean" },
								"limousine": { "type": "boolean" },
								"bicycle_taxi": { "type": "boolean" },
								"car": { "type": "boolean" },
								"cruise": { "type": "boolean" },
								"city": { "type": "string" },
								"vid": { "type": "string" },
								"reviews_count": { "type": "integer" },
								"price": { "type": "number" },
								"reviews": { "type": "array", "items": { "type": "string" } },
								"country": { "type": "string" },
								"image_urls": { "type": "string" },
								"approved": { "type": "boolean" },
								"translationApproved": { "type": "boolean" },
								"createdLanguage": { "type": "string" },
								"next": { "type": "boolean" },
								"description": { "type": "string" },
								"location_point": { "type": "string" },
								"orders": { "type": "array", "items": { "type": "string" } },
								"requetedCity": { "type": "string" },
								"profile": { "type": "string" },
								"duration": { "type": "string" },
								"languages": { "type": "string" },
								"adult_price": { "type": "number" },
								"child_price": { "type": "number" },
								"prerequisites": { "type": "string" },
								"prohibitions": { "type": "string" },
								"included": { "type": "string" },
								"not_included": { "type": "string" },
								"date": { "type": "string" },
								"note": { "type": "string" },
								"alwaysAvailable": { "type": "boolean" },
								"remark": { "type": "string" },
								"withTransfer": { "type": "boolean" },
								"hunting": { "type": "boolean" },
								"adventure": { "type": "boolean" },
								"fishing": { "type": "boolean" },
								"night": { "type": "boolean" },
								"game": { "type": "boolean" },
								"onlyTransfer": { "type": "boolean" },
								"fewDaysTrip": { "type": "boolean" },
								"placesCount": { "type": "integer" },
								"mainPhotoUrl": { "type": "string" },
								"transferPrice": { "type": "number" },
								"transferPhotoUrl": { "type": "string" },
								"active": { "type": "boolean" },
								"startTime": { "type": "string" },
								"weekDays": { "type": "string" },
								"freeTicketNotice": { "type": "string" },
								"localizations": {
									"type": "array",
									"items": { "type": "string" }
								},
								"locale": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"socialLink": { "type": "string" },
					"hasWhatsapp": { "type": "boolean", "default": false },
					"hasViber": { "type": "boolean", "default": false },
					"hasTelegram": { "type": "boolean", "default": false }
				}
			},
			"NewProfile": {
				"properties": {
					"email": { "type": "string" },
					"name": { "type": "string" },
					"phone_number": { "type": "string" },
					"is_tourist": { "type": "boolean", "default": true },
					"is_verified": { "type": "boolean", "default": false },
					"get_promo": { "type": "boolean", "default": false },
					"photo_url": { "type": "string" },
					"documents_urls": { "type": "object" },
					"uid": { "type": "uid" },
					"reviews_count": { "type": "integer" },
					"reviews": { "type": "array", "items": { "type": "string" } },
					"orders": { "type": "array", "items": { "type": "string" } },
					"fcm_token": { "type": "string" },
					"locale": { "type": "string" },
					"balance": { "type": "number", "default": 0 },
					"soldOrders": { "type": "array", "items": { "type": "string" } },
					"payments": { "type": "array", "items": { "type": "string" } },
					"payment_cards": { "type": "array", "items": { "type": "string" } },
					"pushSub": { "type": "boolean", "default": false },
					"tours": { "type": "array", "items": { "type": "string" } },
					"socialLink": { "type": "string" },
					"hasWhatsapp": { "type": "boolean", "default": false },
					"hasViber": { "type": "boolean", "default": false },
					"hasTelegram": { "type": "boolean", "default": false },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Remarks": {
				"required": ["id", "title", "remark"],
				"properties": {
					"id": { "type": "string" },
					"title": { "type": "string" },
					"remark": { "type": "string" },
					"tour": {
						"required": ["id", "name"],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"image": { "type": "array", "items": { "type": "string" } },
							"rating": { "type": "number" },
							"order": { "type": "integer" },
							"top": { "type": "boolean" },
							"guide": { "type": "boolean" },
							"private": { "type": "boolean" },
							"one_day_trip": { "type": "boolean" },
							"nature": { "type": "boolean" },
							"ticket_must_have": { "type": "boolean" },
							"on_water": { "type": "boolean" },
							"package_tour": { "type": "boolean" },
							"small_group": { "type": "boolean" },
							"invalid_friendly": { "type": "boolean" },
							"history": { "type": "boolean" },
							"world_war": { "type": "boolean" },
							"open_air": { "type": "boolean" },
							"street_art": { "type": "boolean" },
							"adrenaline": { "type": "boolean" },
							"architecture": { "type": "boolean" },
							"food": { "type": "boolean" },
							"music": { "type": "boolean" },
							"for_couples_activities": { "type": "boolean" },
							"for_kids_activities": { "type": "boolean" },
							"museum": { "type": "boolean" },
							"memorial": { "type": "boolean" },
							"park": { "type": "boolean" },
							"gallery": { "type": "boolean" },
							"square": { "type": "boolean" },
							"theater": { "type": "boolean" },
							"castle": { "type": "boolean" },
							"towers": { "type": "boolean" },
							"airports": { "type": "boolean" },
							"bicycle": { "type": "boolean" },
							"minivan": { "type": "boolean" },
							"public_transport": { "type": "boolean" },
							"limousine": { "type": "boolean" },
							"bicycle_taxi": { "type": "boolean" },
							"car": { "type": "boolean" },
							"cruise": { "type": "boolean" },
							"city": { "type": "string" },
							"vid": { "type": "string" },
							"reviews_count": { "type": "integer" },
							"price": { "type": "number" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"country": { "type": "string" },
							"image_urls": { "type": "string" },
							"approved": { "type": "boolean" },
							"translationApproved": { "type": "boolean" },
							"createdLanguage": { "type": "string" },
							"next": { "type": "boolean" },
							"description": { "type": "string" },
							"location_point": { "type": "string" },
							"orders": { "type": "array", "items": { "type": "string" } },
							"requetedCity": { "type": "string" },
							"profile": { "type": "string" },
							"duration": { "type": "string" },
							"languages": { "type": "string" },
							"adult_price": { "type": "number" },
							"child_price": { "type": "number" },
							"prerequisites": { "type": "string" },
							"prohibitions": { "type": "string" },
							"included": { "type": "string" },
							"not_included": { "type": "string" },
							"date": { "type": "string" },
							"note": { "type": "string" },
							"alwaysAvailable": { "type": "boolean" },
							"remark": { "type": "string" },
							"withTransfer": { "type": "boolean" },
							"hunting": { "type": "boolean" },
							"adventure": { "type": "boolean" },
							"fishing": { "type": "boolean" },
							"night": { "type": "boolean" },
							"game": { "type": "boolean" },
							"onlyTransfer": { "type": "boolean" },
							"fewDaysTrip": { "type": "boolean" },
							"placesCount": { "type": "integer" },
							"mainPhotoUrl": { "type": "string" },
							"transferPrice": { "type": "number" },
							"transferPhotoUrl": { "type": "string" },
							"active": { "type": "boolean" },
							"startTime": { "type": "string" },
							"weekDays": { "type": "string" },
							"freeTicketNotice": { "type": "string" },
							"localizations": {
								"type": "array",
								"items": { "type": "string" }
							},
							"locale": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					}
				}
			},
			"NewRemarks": {
				"required": ["title", "remark"],
				"properties": {
					"title": { "type": "string" },
					"remark": { "type": "string" },
					"tour": { "type": "string" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Review": {
				"required": ["id"],
				"properties": {
					"id": { "type": "string" },
					"name": { "type": "string" },
					"photo_url": { "type": "string" },
					"text": { "type": "string" },
					"rating": { "type": "integer" },
					"tour": {
						"required": ["id", "name"],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"image": { "type": "array", "items": { "type": "string" } },
							"rating": { "type": "number" },
							"order": { "type": "integer" },
							"top": { "type": "boolean" },
							"guide": { "type": "boolean" },
							"private": { "type": "boolean" },
							"one_day_trip": { "type": "boolean" },
							"nature": { "type": "boolean" },
							"ticket_must_have": { "type": "boolean" },
							"on_water": { "type": "boolean" },
							"package_tour": { "type": "boolean" },
							"small_group": { "type": "boolean" },
							"invalid_friendly": { "type": "boolean" },
							"history": { "type": "boolean" },
							"world_war": { "type": "boolean" },
							"open_air": { "type": "boolean" },
							"street_art": { "type": "boolean" },
							"adrenaline": { "type": "boolean" },
							"architecture": { "type": "boolean" },
							"food": { "type": "boolean" },
							"music": { "type": "boolean" },
							"for_couples_activities": { "type": "boolean" },
							"for_kids_activities": { "type": "boolean" },
							"museum": { "type": "boolean" },
							"memorial": { "type": "boolean" },
							"park": { "type": "boolean" },
							"gallery": { "type": "boolean" },
							"square": { "type": "boolean" },
							"theater": { "type": "boolean" },
							"castle": { "type": "boolean" },
							"towers": { "type": "boolean" },
							"airports": { "type": "boolean" },
							"bicycle": { "type": "boolean" },
							"minivan": { "type": "boolean" },
							"public_transport": { "type": "boolean" },
							"limousine": { "type": "boolean" },
							"bicycle_taxi": { "type": "boolean" },
							"car": { "type": "boolean" },
							"cruise": { "type": "boolean" },
							"city": { "type": "string" },
							"vid": { "type": "string" },
							"reviews_count": { "type": "integer" },
							"price": { "type": "number" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"country": { "type": "string" },
							"image_urls": { "type": "string" },
							"approved": { "type": "boolean" },
							"translationApproved": { "type": "boolean" },
							"createdLanguage": { "type": "string" },
							"next": { "type": "boolean" },
							"description": { "type": "string" },
							"location_point": { "type": "string" },
							"orders": { "type": "array", "items": { "type": "string" } },
							"requetedCity": { "type": "string" },
							"profile": { "type": "string" },
							"duration": { "type": "string" },
							"languages": { "type": "string" },
							"adult_price": { "type": "number" },
							"child_price": { "type": "number" },
							"prerequisites": { "type": "string" },
							"prohibitions": { "type": "string" },
							"included": { "type": "string" },
							"not_included": { "type": "string" },
							"date": { "type": "string" },
							"note": { "type": "string" },
							"alwaysAvailable": { "type": "boolean" },
							"remark": { "type": "string" },
							"withTransfer": { "type": "boolean" },
							"hunting": { "type": "boolean" },
							"adventure": { "type": "boolean" },
							"fishing": { "type": "boolean" },
							"night": { "type": "boolean" },
							"game": { "type": "boolean" },
							"onlyTransfer": { "type": "boolean" },
							"fewDaysTrip": { "type": "boolean" },
							"placesCount": { "type": "integer" },
							"mainPhotoUrl": { "type": "string" },
							"transferPrice": { "type": "number" },
							"transferPhotoUrl": { "type": "string" },
							"active": { "type": "boolean" },
							"startTime": { "type": "string" },
							"weekDays": { "type": "string" },
							"freeTicketNotice": { "type": "string" },
							"localizations": {
								"type": "array",
								"items": { "type": "string" }
							},
							"locale": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"profile": {
						"required": ["id"],
						"properties": {
							"id": { "type": "string" },
							"email": { "type": "string" },
							"name": { "type": "string" },
							"photo": { "type": "string" },
							"phone_number": { "type": "string" },
							"is_tourist": { "type": "boolean" },
							"is_verified": { "type": "boolean" },
							"get_promo": { "type": "boolean" },
							"documents": { "type": "array", "items": { "type": "string" } },
							"photo_url": { "type": "string" },
							"documents_urls": { "type": "object" },
							"uid": { "type": "uid" },
							"reviews_count": { "type": "integer" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"orders": { "type": "array", "items": { "type": "string" } },
							"fcm_token": { "type": "string" },
							"locale": { "type": "string" },
							"balance": { "type": "number" },
							"soldOrders": { "type": "array", "items": { "type": "string" } },
							"payments": { "type": "array", "items": { "type": "string" } },
							"payment_cards": {
								"type": "array",
								"items": { "type": "string" }
							},
							"pushSub": { "type": "boolean" },
							"tours": { "type": "array", "items": { "type": "string" } },
							"socialLink": { "type": "string" },
							"hasWhatsapp": { "type": "boolean" },
							"hasViber": { "type": "boolean" },
							"hasTelegram": { "type": "boolean" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					}
				}
			},
			"NewReview": {
				"properties": {
					"name": { "type": "string" },
					"photo_url": { "type": "string" },
					"text": { "type": "string" },
					"rating": { "type": "integer" },
					"tour": { "type": "string" },
					"profile": { "type": "string" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Settings": {
				"required": ["id"],
				"properties": {
					"id": { "type": "string" },
					"payment": { "type": "boolean", "default": false }
				}
			},
			"NewSettings": {
				"properties": {
					"payment": { "type": "boolean", "default": false },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Tour": {
				"required": ["id", "name"],
				"properties": {
					"id": { "type": "string" },
					"name": { "type": "string" },
					"image": {
						"type": "array",
						"items": {
							"required": [
								"id",
								"name",
								"hash",
								"mime",
								"size",
								"url",
								"provider"
							],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"alternativeText": { "type": "string" },
								"caption": { "type": "string" },
								"width": { "type": "integer" },
								"height": { "type": "integer" },
								"formats": { "type": "object" },
								"hash": { "type": "string" },
								"ext": { "type": "string" },
								"mime": { "type": "string" },
								"size": { "type": "number" },
								"url": { "type": "string" },
								"previewUrl": { "type": "string" },
								"provider": { "type": "string" },
								"provider_metadata": { "type": "object" },
								"related": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"rating": { "type": "number" },
					"order": { "type": "integer" },
					"top": { "type": "boolean", "default": false },
					"guide": { "type": "boolean", "default": false },
					"private": { "type": "boolean", "default": false },
					"one_day_trip": { "type": "boolean", "default": false },
					"nature": { "type": "boolean", "default": false },
					"ticket_must_have": { "type": "boolean", "default": false },
					"on_water": { "type": "boolean", "default": false },
					"package_tour": { "type": "boolean", "default": false },
					"small_group": { "type": "boolean", "default": false },
					"invalid_friendly": { "type": "boolean", "default": false },
					"history": { "type": "boolean", "default": false },
					"world_war": { "type": "boolean", "default": false },
					"open_air": { "type": "boolean", "default": false },
					"street_art": { "type": "boolean", "default": false },
					"adrenaline": { "type": "boolean", "default": false },
					"architecture": { "type": "boolean", "default": false },
					"food": { "type": "boolean", "default": false },
					"music": { "type": "boolean", "default": false },
					"for_couples_activities": { "type": "boolean", "default": false },
					"for_kids_activities": { "type": "boolean", "default": false },
					"museum": { "type": "boolean", "default": false },
					"memorial": { "type": "boolean", "default": false },
					"park": { "type": "boolean", "default": false },
					"gallery": { "type": "boolean", "default": false },
					"square": { "type": "boolean", "default": false },
					"theater": { "type": "boolean", "default": false },
					"castle": { "type": "boolean", "default": false },
					"towers": { "type": "boolean", "default": false },
					"airports": { "type": "boolean", "default": false },
					"bicycle": { "type": "boolean", "default": false },
					"minivan": { "type": "boolean", "default": false },
					"public_transport": { "type": "boolean", "default": false },
					"limousine": { "type": "boolean", "default": false },
					"bicycle_taxi": { "type": "boolean", "default": false },
					"car": { "type": "boolean", "default": false },
					"cruise": { "type": "boolean", "default": false },
					"city": {
						"required": ["id", "name", "image"],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"image": { "type": "string" },
							"order": { "type": "integer" },
							"country": { "type": "string" },
							"tours": { "type": "array", "items": { "type": "string" } },
							"vid": { "type": "string" },
							"next": { "type": "boolean" },
							"createdLanguage": { "type": "string" },
							"active": { "type": "boolean" },
							"popular": { "type": "boolean" },
							"notCity": { "type": "boolean" },
							"localizations": {
								"type": "array",
								"items": { "type": "string" }
							},
							"locale": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"vid": { "type": "string" },
					"reviews_count": { "type": "integer", "default": 0 },
					"price": { "type": "number", "default": 0 },
					"reviews": {
						"type": "array",
						"items": {
							"required": ["id"],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"photo_url": { "type": "string" },
								"text": { "type": "string" },
								"rating": { "type": "integer" },
								"tour": { "type": "string" },
								"profile": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"country": { "type": "string" },
					"image_urls": { "type": "string" },
					"approved": { "type": "boolean", "default": false },
					"translationApproved": { "type": "boolean", "default": false },
					"createdLanguage": { "type": "string", "default": "ru-RU" },
					"description": { "type": "string" },
					"location_point": { "type": "string" },
					"orders": {
						"type": "array",
						"items": {
							"required": ["id"],
							"properties": {
								"id": { "type": "string" },
								"price": { "type": "number" },
								"date": { "type": "string" },
								"seller_confirmed": { "type": "boolean" },
								"activated": { "type": "boolean" },
								"commission": { "type": "number" },
								"qrcode_url": { "type": "string" },
								"profile": { "type": "string" },
								"is_shild": { "type": "boolean" },
								"canceled": { "type": "boolean" },
								"tour": { "type": "string" },
								"seller": { "type": "string" },
								"tour_name": { "type": "string" },
								"yoo_payment": { "type": "string" },
								"yoo_deal": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"requetedCity": { "type": "string" },
					"profile": {
						"required": ["id"],
						"properties": {
							"id": { "type": "string" },
							"email": { "type": "string" },
							"name": { "type": "string" },
							"photo": { "type": "string" },
							"phone_number": { "type": "string" },
							"is_tourist": { "type": "boolean" },
							"is_verified": { "type": "boolean" },
							"get_promo": { "type": "boolean" },
							"documents": { "type": "array", "items": { "type": "string" } },
							"photo_url": { "type": "string" },
							"documents_urls": { "type": "object" },
							"uid": { "type": "uid" },
							"reviews_count": { "type": "integer" },
							"reviews": { "type": "array", "items": { "type": "string" } },
							"orders": { "type": "array", "items": { "type": "string" } },
							"fcm_token": { "type": "string" },
							"locale": { "type": "string" },
							"balance": { "type": "number" },
							"soldOrders": { "type": "array", "items": { "type": "string" } },
							"payments": { "type": "array", "items": { "type": "string" } },
							"payment_cards": {
								"type": "array",
								"items": { "type": "string" }
							},
							"pushSub": { "type": "boolean" },
							"tours": { "type": "array", "items": { "type": "string" } },
							"socialLink": { "type": "string" },
							"hasWhatsapp": { "type": "boolean" },
							"hasViber": { "type": "boolean" },
							"hasTelegram": { "type": "boolean" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"duration": { "type": "string" },
					"languages": { "type": "string" },
					"adult_price": { "type": "number" },
					"child_price": { "type": "number" },
					"prerequisites": { "type": "string" },
					"prohibitions": { "type": "string" },
					"included": { "type": "string" },
					"not_included": { "type": "string" },
					"date": { "type": "string", "format": "date-time" },
					"note": { "type": "string" },
					"alwaysAvailable": { "type": "boolean", "default": false },
					"remark": {
						"required": ["id", "title", "remark"],
						"properties": {
							"id": { "type": "string" },
							"title": { "type": "string" },
							"remark": { "type": "string" },
							"tour": { "type": "string" },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"withTransfer": { "type": "boolean", "default": false },
					"hunting": { "type": "boolean", "default": false },
					"adventure": { "type": "boolean", "default": false },
					"fishing": { "type": "boolean", "default": false },
					"night": { "type": "boolean", "default": false },
					"game": { "type": "boolean", "default": false },
					"onlyTransfer": { "type": "boolean", "default": false },
					"fewDaysTrip": { "type": "boolean", "default": false },
					"placesCount": { "type": "integer" },
					"mainPhotoUrl": { "type": "string" },
					"transferPrice": { "type": "number" },
					"transferPhotoUrl": { "type": "string" },
					"active": { "type": "boolean", "default": true },
					"startTime": { "type": "string" },
					"weekDays": { "type": "string" },
					"freeTicketNotice": { "type": "string" },
					"localizations": {
						"type": "array",
						"items": {
							"required": ["id", "name"],
							"properties": {
								"id": { "type": "string" },
								"name": { "type": "string" },
								"image": { "type": "array", "items": { "type": "string" } },
								"rating": { "type": "number" },
								"order": { "type": "integer" },
								"top": { "type": "boolean" },
								"guide": { "type": "boolean" },
								"private": { "type": "boolean" },
								"one_day_trip": { "type": "boolean" },
								"nature": { "type": "boolean" },
								"ticket_must_have": { "type": "boolean" },
								"on_water": { "type": "boolean" },
								"package_tour": { "type": "boolean" },
								"small_group": { "type": "boolean" },
								"invalid_friendly": { "type": "boolean" },
								"history": { "type": "boolean" },
								"world_war": { "type": "boolean" },
								"open_air": { "type": "boolean" },
								"street_art": { "type": "boolean" },
								"adrenaline": { "type": "boolean" },
								"architecture": { "type": "boolean" },
								"food": { "type": "boolean" },
								"music": { "type": "boolean" },
								"for_couples_activities": { "type": "boolean" },
								"for_kids_activities": { "type": "boolean" },
								"museum": { "type": "boolean" },
								"memorial": { "type": "boolean" },
								"park": { "type": "boolean" },
								"gallery": { "type": "boolean" },
								"square": { "type": "boolean" },
								"theater": { "type": "boolean" },
								"castle": { "type": "boolean" },
								"towers": { "type": "boolean" },
								"airports": { "type": "boolean" },
								"bicycle": { "type": "boolean" },
								"minivan": { "type": "boolean" },
								"public_transport": { "type": "boolean" },
								"limousine": { "type": "boolean" },
								"bicycle_taxi": { "type": "boolean" },
								"car": { "type": "boolean" },
								"cruise": { "type": "boolean" },
								"city": { "type": "string" },
								"vid": { "type": "string" },
								"reviews_count": { "type": "integer" },
								"price": { "type": "number" },
								"reviews": { "type": "array", "items": { "type": "string" } },
								"country": { "type": "string" },
								"image_urls": { "type": "string" },
								"approved": { "type": "boolean" },
								"translationApproved": { "type": "boolean" },
								"createdLanguage": { "type": "string" },
								"next": { "type": "boolean" },
								"description": { "type": "string" },
								"location_point": { "type": "string" },
								"orders": { "type": "array", "items": { "type": "string" } },
								"requetedCity": { "type": "string" },
								"profile": { "type": "string" },
								"duration": { "type": "string" },
								"languages": { "type": "string" },
								"adult_price": { "type": "number" },
								"child_price": { "type": "number" },
								"prerequisites": { "type": "string" },
								"prohibitions": { "type": "string" },
								"included": { "type": "string" },
								"not_included": { "type": "string" },
								"date": { "type": "string" },
								"note": { "type": "string" },
								"alwaysAvailable": { "type": "boolean" },
								"remark": { "type": "string" },
								"withTransfer": { "type": "boolean" },
								"hunting": { "type": "boolean" },
								"adventure": { "type": "boolean" },
								"fishing": { "type": "boolean" },
								"night": { "type": "boolean" },
								"game": { "type": "boolean" },
								"onlyTransfer": { "type": "boolean" },
								"fewDaysTrip": { "type": "boolean" },
								"placesCount": { "type": "integer" },
								"mainPhotoUrl": { "type": "string" },
								"transferPrice": { "type": "number" },
								"transferPhotoUrl": { "type": "string" },
								"active": { "type": "boolean" },
								"startTime": { "type": "string" },
								"weekDays": { "type": "string" },
								"freeTicketNotice": { "type": "string" },
								"localizations": {
									"type": "array",
									"items": { "type": "string" }
								},
								"locale": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"locale": { "type": "string" }
				}
			},
			"NewTour": {
				"required": ["name"],
				"properties": {
					"name": { "type": "string" },
					"rating": { "type": "number" },
					"order": { "type": "integer" },
					"top": { "type": "boolean", "default": false },
					"guide": { "type": "boolean", "default": false },
					"private": { "type": "boolean", "default": false },
					"one_day_trip": { "type": "boolean", "default": false },
					"nature": { "type": "boolean", "default": false },
					"ticket_must_have": { "type": "boolean", "default": false },
					"on_water": { "type": "boolean", "default": false },
					"package_tour": { "type": "boolean", "default": false },
					"small_group": { "type": "boolean", "default": false },
					"invalid_friendly": { "type": "boolean", "default": false },
					"history": { "type": "boolean", "default": false },
					"world_war": { "type": "boolean", "default": false },
					"open_air": { "type": "boolean", "default": false },
					"street_art": { "type": "boolean", "default": false },
					"adrenaline": { "type": "boolean", "default": false },
					"architecture": { "type": "boolean", "default": false },
					"food": { "type": "boolean", "default": false },
					"music": { "type": "boolean", "default": false },
					"for_couples_activities": { "type": "boolean", "default": false },
					"for_kids_activities": { "type": "boolean", "default": false },
					"museum": { "type": "boolean", "default": false },
					"memorial": { "type": "boolean", "default": false },
					"park": { "type": "boolean", "default": false },
					"gallery": { "type": "boolean", "default": false },
					"square": { "type": "boolean", "default": false },
					"theater": { "type": "boolean", "default": false },
					"castle": { "type": "boolean", "default": false },
					"towers": { "type": "boolean", "default": false },
					"airports": { "type": "boolean", "default": false },
					"bicycle": { "type": "boolean", "default": false },
					"minivan": { "type": "boolean", "default": false },
					"public_transport": { "type": "boolean", "default": false },
					"limousine": { "type": "boolean", "default": false },
					"bicycle_taxi": { "type": "boolean", "default": false },
					"car": { "type": "boolean", "default": false },
					"cruise": { "type": "boolean", "default": false },
					"city": { "type": "string" },
					"vid": { "type": "string" },
					"reviews_count": { "type": "integer", "default": 0 },
					"price": { "type": "number", "default": 0 },
					"reviews": { "type": "array", "items": { "type": "string" } },
					"country": { "type": "string" },
					"image_urls": { "type": "string" },
					"approved": { "type": "boolean", "default": false },
					"translationApproved": { "type": "boolean", "default": false },
					"createdLanguage": { "type": "string", "default": "ru-RU" },
					"next": { "type": "boolean", "default": false },
					"description": { "type": "string" },
					"location_point": { "type": "string" },
					"orders": { "type": "array", "items": { "type": "string" } },
					"requetedCity": { "type": "string" },
					"profile": { "type": "string" },
					"duration": { "type": "string" },
					"languages": { "type": "string" },
					"adult_price": { "type": "number" },
					"child_price": { "type": "number" },
					"prerequisites": { "type": "string" },
					"prohibitions": { "type": "string" },
					"included": { "type": "string" },
					"not_included": { "type": "string" },
					"date": { "type": "string", "format": "date-time" },
					"note": { "type": "string" },
					"alwaysAvailable": { "type": "boolean", "default": false },
					"remark": { "type": "string" },
					"withTransfer": { "type": "boolean", "default": false },
					"hunting": { "type": "boolean", "default": false },
					"adventure": { "type": "boolean", "default": false },
					"fishing": { "type": "boolean", "default": false },
					"night": { "type": "boolean", "default": false },
					"game": { "type": "boolean", "default": false },
					"onlyTransfer": { "type": "boolean", "default": false },
					"fewDaysTrip": { "type": "boolean", "default": false },
					"placesCount": { "type": "integer" },
					"mainPhotoUrl": { "type": "string" },
					"transferPrice": { "type": "number" },
					"transferPhotoUrl": { "type": "string" },
					"active": { "type": "boolean", "default": true },
					"startTime": { "type": "string" },
					"weekDays": { "type": "string" },
					"freeTicketNotice": { "type": "string" },
					"localizations": { "type": "array", "items": { "type": "string" } },
					"locale": { "type": "string" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"User-agreement": {
				"required": ["id"],
				"properties": {
					"id": { "type": "string" },
					"title": { "type": "string" },
					"text": { "type": "string" },
					"published_at": { "type": "string", "format": "date-time" }
				}
			},
			"NewUser-agreement": {
				"properties": {
					"title": { "type": "string" },
					"text": { "type": "string" },
					"published_at": { "type": "string", "format": "date-time" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"UsersPermissionsRole": {
				"required": ["id", "name"],
				"properties": {
					"id": { "type": "string" },
					"name": { "type": "string", "minLength": 3 },
					"description": { "type": "string" },
					"type": { "type": "string" },
					"permissions": {
						"type": "array",
						"items": {
							"required": ["id", "type", "controller", "action", "enabled"],
							"properties": {
								"id": { "type": "string" },
								"type": { "type": "string" },
								"controller": { "type": "string" },
								"action": { "type": "string" },
								"enabled": { "type": "boolean" },
								"policy": { "type": "string" },
								"role": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					},
					"users": {
						"type": "array",
						"items": {
							"required": ["id", "username", "email"],
							"properties": {
								"id": { "type": "string" },
								"username": { "type": "string" },
								"email": { "type": "string" },
								"provider": { "type": "string" },
								"password": { "type": "string" },
								"resetPasswordToken": { "type": "string" },
								"confirmationToken": { "type": "string" },
								"confirmed": { "type": "boolean" },
								"blocked": { "type": "boolean" },
								"role": { "type": "string" },
								"language": { "type": "string" },
								"created_by": { "type": "string" },
								"updated_by": { "type": "string" }
							}
						}
					}
				}
			},
			"NewUsersPermissionsRole": {
				"required": ["name"],
				"properties": {
					"name": { "type": "string", "minLength": 3 },
					"description": { "type": "string" },
					"type": { "type": "string" },
					"permissions": { "type": "array", "items": { "type": "string" } },
					"users": { "type": "array", "items": { "type": "string" } },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"UsersPermissionsUser": {
				"required": ["id", "username", "email"],
				"properties": {
					"id": { "type": "string" },
					"username": { "type": "string", "minLength": 3 },
					"email": { "type": "string", "minLength": 6 },
					"provider": { "type": "string" },
					"confirmed": { "type": "boolean", "default": false },
					"blocked": { "type": "boolean", "default": false },
					"role": {
						"required": ["id", "name"],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"description": { "type": "string" },
							"type": { "type": "string" },
							"permissions": { "type": "array", "items": { "type": "string" } },
							"users": { "type": "array", "items": { "type": "string" } },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					},
					"language": {
						"required": ["id"],
						"properties": {
							"id": { "type": "string" },
							"name": { "type": "string" },
							"code": { "type": "string" },
							"translators": { "type": "array", "items": { "type": "string" } },
							"created_by": { "type": "string" },
							"updated_by": { "type": "string" }
						}
					}
				}
			},
			"NewUsersPermissionsUser": {
				"required": ["username", "email"],
				"properties": {
					"username": { "type": "string", "minLength": 3 },
					"email": { "type": "string", "minLength": 6 },
					"provider": { "type": "string" },
					"password": {
						"type": "string",
						"format": "password",
						"minLength": 6
					},
					"resetPasswordToken": { "type": "string" },
					"confirmationToken": { "type": "string" },
					"confirmed": { "type": "boolean", "default": false },
					"blocked": { "type": "boolean", "default": false },
					"role": { "type": "string" },
					"language": { "type": "string" },
					"created_by": { "type": "string" },
					"updated_by": { "type": "string" }
				}
			},
			"Error": {
				"required": ["code", "message"],
				"properties": {
					"code": { "type": "integer", "format": "int32" },
					"message": { "type": "string" }
				}
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"tags": [
		{ "name": "City" },
		{ "name": "Country" },
		{ "name": "Order" },
		{ "name": "Payment" },
		{ "name": "Profile" },
		{ "name": "Remarks" },
		{ "name": "Review" },
		{ "name": "Settings" },
		{ "name": "Tour" },
		{ "name": "Email - Email" },
		{ "name": "Upload - File" },
		{ "name": "UsersPermissions - Role" },
		{ "name": "UsersPermissions - User" }
	]
}
